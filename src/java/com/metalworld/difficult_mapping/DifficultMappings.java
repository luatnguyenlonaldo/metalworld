//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.18 at 10:55:23 AM ICT 
//
package com.metalworld.difficult_mapping;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for DifficultMappings complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="DifficultMappings">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="difficultMapping" type="{http://xml.netbeans.org/schema/difficult-for-product}DifficultMapping" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DifficultMappings", propOrder = {
    "difficultMapping"
})
@XmlRootElement(name = "difficultMappings")
public class DifficultMappings {

    protected List<DifficultMapping> difficultMapping;

    /**
     * Gets the value of the difficultMapping property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the difficultMapping property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDifficultMapping().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DifficultMapping }
     *
     *
     */
    public List<DifficultMapping> getDifficultMapping() {
        if (difficultMapping == null) {
            difficultMapping = new ArrayList<DifficultMapping>();
        }
        return this.difficultMapping;
    }

    private static final String DIFFICULT_MAPPING_FILE
            = "WEB-INF\\configs\\difficult\\difficult-for-product.xml";

    public synchronized static DifficultMappings getDifficultMappings(String realPath) {
        try {
//            System.out.println("vao jaxb roi");
            JAXBContext context = JAXBContext.newInstance(DifficultMappings.class);
            Unmarshaller un = context.createUnmarshaller();

            String filePath = realPath + DIFFICULT_MAPPING_FILE;
//            System.out.println("filebatch n√®: " + filePath);

            File file = new File(filePath);

            DifficultMappings mappings = (DifficultMappings) un.unmarshal(file);

            if (mappings != null) {
                return mappings;
            }
        } catch (JAXBException ex) {
            Logger.getLogger(DifficultMappings.class.getName()).log(Level.SEVERE, null, ex);
        }
        return new DifficultMappings();
    }
}
