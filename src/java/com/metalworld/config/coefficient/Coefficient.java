//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.02 at 09:24:24 PM ICT 
//


package com.metalworld.config.coefficient;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Coefficient complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Coefficient">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="free-coefficient" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="skill-coefficient" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="difficult-coefficient" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Coefficient", propOrder = {
    "freeCoefficient",
    "skillCoefficient",
    "difficultCoefficient"
})
@XmlRootElement(name = "coefficient")
public class Coefficient {

    @XmlElement(name = "free-coefficient", required = true)
    protected String freeCoefficient;
    @XmlElement(name = "skill-coefficient", required = true)
    protected String skillCoefficient;
    @XmlElement(name = "difficult-coefficient", required = true)
    protected String difficultCoefficient;

    public Coefficient(String freeCoefficient, String skillCoefficient, String difficultCoefficient) {
        this.freeCoefficient = freeCoefficient;
        this.skillCoefficient = skillCoefficient;
        this.difficultCoefficient = difficultCoefficient;
    }

    public Coefficient() {
    }

    /**
     * Gets the value of the freeCoefficient property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFreeCoefficient() {
        return freeCoefficient;
    }

    /**
     * Sets the value of the freeCoefficient property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFreeCoefficient(String value) {
        this.freeCoefficient = value;
    }

    /**
     * Gets the value of the skillCoefficient property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSkillCoefficient() {
        return skillCoefficient;
    }

    /**
     * Sets the value of the skillCoefficient property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSkillCoefficient(String value) {
        this.skillCoefficient = value;
    }

    /**
     * Gets the value of the difficultCoefficient property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDifficultCoefficient() {
        return difficultCoefficient;
    }

    /**
     * Sets the value of the difficultCoefficient property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDifficultCoefficient(String value) {
        this.difficultCoefficient = value;
    }
    
    private static final String CATEGORY_MAPPING_FILE
            = "WEB-INF\\configs\\coefficient\\coefficient.xml";
   
    public synchronized static Coefficient getCoefficient(String realPath) {
        try {
            JAXBContext context = JAXBContext.newInstance(Coefficient.class);
            Unmarshaller un = context.createUnmarshaller();
            
            String filePath = realPath + CATEGORY_MAPPING_FILE;
            
            File file = new File(filePath);
            
            Coefficient mappings = (Coefficient) un.unmarshal(file);
            
            if (mappings != null) {
                return mappings;
            }
        } catch (JAXBException ex) {
            Logger.getLogger(Coefficient.class.getName()).log(Level.SEVERE, null, ex);
        }
        return new Coefficient();
    }
    
    public synchronized static boolean updateCoefficient(String realPath, Coefficient coefficient) {
        boolean result = true;
        try {
            JAXBContext context = JAXBContext.newInstance(Coefficient.class);
            Marshaller m = context.createMarshaller();
            String filePath = realPath + CATEGORY_MAPPING_FILE;
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
            m.marshal(coefficient, new File(filePath));
        } catch (JAXBException ex) {
            result = false;
            Logger.getLogger(Coefficient.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

}
